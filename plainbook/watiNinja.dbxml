<?xml version="1.0" encoding="UTF-8"?><chapter id="chp_watiNinja"><title>Automating with .Net and WatiN</title><para>
		In this chapter we will put into practice some of the principles from <xref linkend="chp_three_layers"/>. To recap,
		our aim is to automate the testing of a feature in a way that is flexible enough to allow for future
		changes. We will divide our test code into three layers in order to achieve this. These layers will have the following 
		aims and responsibilities:
	</para><itemizedlist><listitem><para>The Business Rules will be expressed in a Cucumber feature file. The feature file will be supported by a step definition class 
			written in C# that will use the API defined in the Workflow layer.
		</para></listitem><listitem><para>
			The Site Workflow will be encapsulated in a fluent API composed of C# classes. This API will attempt to provide a DSL which 
			describes how users navigate through the site to achieve goals that are of interest for the feature(s) described in the Business Rules. 
			It will depend on the Technical Implementation API to provide the means of communicating with the application being tested.
		</para></listitem><listitem><para>The Technical Implementation API will provide a finely grained set of classes which will hide the details of UI Automation. It will aim to
			promote reuse and to insulate the Workflow layer from UI changes</para></listitem></itemizedlist><section id="sec_watiNinja_kickoff"><title>Getting Ready</title><para>
			Before we start, we need to set up the project and get the WatiN libraries.
		</para><section id="sec_watiNinja_watin"><title>WatiN</title><para>
				WatiN (pronounced What-in) is a library for Web Application Testing in .Net (the initials form the name). It was inspired by WatiR (pronounced water, 
				where the R stands for Ruby). There is more information about WatiN on SourceForge.<footnote><para><ulink url="http://watin.sourceforge.net/"/></para></footnote></para><para>
				Download the files from SourceForge<footnote><para><ulink url="http://sourceforge.net/projects/watin/files/"/></para></footnote>. For the example in this chapter, I used the 
				2.x / 2.0 Release candidate.<footnote><para><ulink url="http://sourceforge.net/projects/watin/files/WatiN%202.x/2.0%20Release%20candidates/"/></para></footnote>
				The files should come in zip format, so you will need to unzip them to a suitable directory. Inside the root directory you should find a directory called <code>Bin</code>. Inside this directory, there should be a file called <code>WatiN.Core.dll</code>. This will need to be references in the project we create.
			</para></section></section></chapter>